{"version":3,"sources":["redux/phonebook/phonebook-reducer.js","redux/store.js","components/Navigation.js","components/UserMenu.js","components/AuthNav.js","components/Bar.js","components/Container/Container.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","index.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/auth/auth-reducers.js","redux/auth/auth-actions.js","redux/phonebook/phonebook-actions.js","components/Container/Container.module.css"],"names":["contactsReducer","createReducer","fetchContactSuccess","_","payload","addContactSuccess","state","deleteContactSuccess","filter","id","loading","addContactRequest","addContactError","deleteContactRequest","deleteContactError","fetchContactRequest","fetchContactError","error","filterReducer","filterChange","combineReducers","contacts","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","phonebook","phoneReducer","auth","persistReducer","authReducer","persistor","persistStore","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","link","display","textDecoration","padding","fontWeight","color","connect","isAuthenticated","authSelectors","getIsAuthenticated","classes","to","exact","className","activeStyle","backgroundColor","s","container","alignItems","avatar","name","button","border","mapDispatchToProps","onLogout","authOperations","logOut","getUsername","style","src","alt","width","type","onClick","activeLink","AuthNav","header","justifyContent","borderBottom","Container","children","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","this","onGetCurretnUser","AppBar","fallback","path","getCurrentUser","ReactDOM","StrictMode","document","getElementById","axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","a","authActions","registerRequest","post","responce","data","registerSuccess","registerError","message","logoutRequest","logoutSuccess","logoutError","logIn","loginRequest","loginSuccess","loginError","getState","currentState","persistedToken","getCurrentUserRequest","get","response","getCurrentUserSuccess","getCurrentUserError","isLoggedIn","user","initialUserState","email","__","createAction","module","exports"],"mappings":"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","file":"static/js/main.9b0e9432.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  filterChange,\r\n} from './phonebook-actions.js';\r\n\r\nconst contactsReducer = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n});\r\n\r\nconst error = createReducer(false, {\r\n  [addContactRequest]: () => false,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => true,\r\n  [deleteContactRequest]: () => false,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => true,\r\n  [fetchContactRequest]: () => false,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => true,\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [filterChange]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n  loading,\r\n  error,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nimport storage from 'redux-persist/lib/storage';\r\nimport phoneReducer from './phonebook/phonebook-reducer.js';\r\nimport authReducer from './auth/auth-reducers';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phonebook: phoneReducer,\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n  },\r\n  middleware,\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line\r\nexport default { store, persistor };\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: 'black',\r\n  },\r\n}));\r\n\r\nconst Navigation = ({ isAuthenticated }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <nav>\r\n      <NavLink\r\n        to=\"/\"\r\n        exact\r\n        className={classes.link}\r\n        activeStyle={{\r\n          backgroundColor: 'cyan',\r\n          color: 'purple',\r\n        }}\r\n      >\r\n        Home\r\n      </NavLink>\r\n\r\n      {isAuthenticated && (\r\n        <NavLink\r\n          to=\"/contacts\"\r\n          exact\r\n          className={classes.link}\r\n          activeStyle={{\r\n            backgroundColor: 'cyan',\r\n            color: 'purple',\r\n          }}\r\n        >\r\n          Contacts\r\n        </NavLink>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navigation);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../redux/auth';\r\n\r\nconst s = {\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    marginRight: 4,\r\n  },\r\n  name: {\r\n    fontWeight: 900,\r\n    marginRight: 12,\r\n  },\r\n  button: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: 'cyan',\r\n\r\n    border: 'transparent',\r\n  },\r\n};\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n  <div style={s.container}>\r\n    <img src={avatar} alt=\"\" width=\"32\" style={s.avatar} />\r\n    <span style={s.name}>Welcome, {name}</span>\r\n    <button style={s.button} type=\"button\" onClick={onLogout}>\r\n      Logout\r\n    </button>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  name: authSelectors.getUsername(state),\r\n  // avatar: defaultAvatar,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: authOperations.logOut,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst s = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 400,\r\n    color: 'black',\r\n  },\r\n  activeLink: {\r\n    backgroundColor: 'cyan',\r\n    color: 'purple',\r\n  },\r\n};\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink to=\"/register\" exact style={s.link} activeStyle={s.activeLink}>\r\n      Register\r\n    </NavLink>\r\n    <NavLink to=\"/login\" exact style={s.link} activeStyle={s.activeLink}>\r\n      Login\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Navigation from './Navigation';\r\nimport UserMenu from './UserMenu';\r\nimport AuthNav from './AuthNav';\r\nimport { authSelectors } from '../redux/auth';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    borderBottom: '1px solid forestgreen',\r\n  },\r\n}));\r\n\r\nconst Bar = ({ isAuthenticated }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <header className={classes.header}>\r\n      <Navigation />\r\n      {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Bar);\r\n","import React from 'react';\r\nimport s from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={s.Container}>{children}</div>\r\n);\r\n\r\nexport default Container;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React, { Component, Suspense, lazy } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Bar from './components/Bar';\nimport Container from './components/Container';\nimport { authOperations } from './redux/auth';\nimport { connect } from 'react-redux';\n\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\n\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\nconst ContactsView = lazy(() => import('./views/ContactsView'));\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurretnUser();\n  }\n\n  render() {\n    return (\n      <Container>\n        <AppBar>\n          <Bar />\n        </AppBar>\n        <Suspense fallback={<p>Loading...</p>}>\n          <Switch>\n            <Route exact path=\"/\" component={HomeView} />\n            <PublicRoute\n              path=\"/register\"\n              restricted\n              redirectTo=\"/contacts\"\n              component={RegisterView}\n            />\n            <PublicRoute\n              path=\"/login\"\n              restricted\n              redirectTo=\"/contacts\"\n              component={LoginView}\n            />\n            <PrivateRoute\n              path=\"/contacts\"\n              component={ContactsView}\n              redirectTo=\"/login\"\n            />\n            <Redirect to=\"/\" />\n          </Switch>\n        </Suspense>\n      </Container>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onGetCurretnUser: authOperations.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport './styles/common.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import axios from 'axios';\r\nimport authActions from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credentials => async dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n  try {\r\n    const responce = await axios.post('/users/signup', credentials);\r\n    token.set(responce.data.token);\r\n\r\n    dispatch(authActions.registerSuccess(responce.data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n\r\nconst logIn = credentials => async dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n  try {\r\n    const responce = await axios.post('/users/login', credentials);\r\n    token.set(responce.data.token);\r\n\r\n    dispatch(authActions.loginSuccess(responce.data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logOut = () => async dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n  try {\r\n    await axios.post('/users/logout');\r\n    token.unset();\r\n\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const currentState = getState();\r\n  const persistedToken = currentState.auth.token;\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\n// eslint-disable-next-line\r\nexport default { register, logOut, logIn, getCurrentUser };\r\n","const getIsAuthenticated = state => state.auth.isLoggedIn;\r\n\r\nconst getUsername = state => state.auth.user.name;\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n  getIsAuthenticated,\r\n  getUsername,\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (state, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (state, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: (_, __) => initialUserState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (state, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (state, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: (_, __) => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: (state, { payload }) => payload,\r\n  [authActions.loginError]: (state, { payload }) => payload,\r\n  [authActions.logoutError]: (state, { payload }) => payload,\r\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isLoggedIn = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n  [authActions.logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n  isLoggedIn,\r\n});\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\n\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\n\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\n\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\n\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\n\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\n\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const filterChange = createAction('contacts/filterChange');\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__KucHV\"};"],"sourceRoot":""}